// Code generated by MockGen. DO NOT EDIT.
// Source: libraries/base.go

// Package mock_libraries is a generated GoMock package.
package mock_libraries

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSoundLibrary is a mock of SoundLibrary interface.
type MockSoundLibrary struct {
	ctrl     *gomock.Controller
	recorder *MockSoundLibraryMockRecorder
}

// MockSoundLibraryMockRecorder is the mock recorder for MockSoundLibrary.
type MockSoundLibraryMockRecorder struct {
	mock *MockSoundLibrary
}

// NewMockSoundLibrary creates a new mock instance.
func NewMockSoundLibrary(ctrl *gomock.Controller) *MockSoundLibrary {
	mock := &MockSoundLibrary{ctrl: ctrl}
	mock.recorder = &MockSoundLibraryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSoundLibrary) EXPECT() *MockSoundLibraryMockRecorder {
	return m.recorder
}

// GetRandomFile mocks base method.
func (m *MockSoundLibrary) GetRandomFile(from []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandomFile", from)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRandomFile indicates an expected call of GetRandomFile.
func (mr *MockSoundLibraryMockRecorder) GetRandomFile(from interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandomFile", reflect.TypeOf((*MockSoundLibrary)(nil).GetRandomFile), from)
}

// ListFiles mocks base method.
func (m *MockSoundLibrary) ListFiles(library string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFiles", library)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFiles indicates an expected call of ListFiles.
func (mr *MockSoundLibraryMockRecorder) ListFiles(library interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFiles", reflect.TypeOf((*MockSoundLibrary)(nil).ListFiles), library)
}

// ListLibraries mocks base method.
func (m *MockSoundLibrary) ListLibraries() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLibraries")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLibraries indicates an expected call of ListLibraries.
func (mr *MockSoundLibraryMockRecorder) ListLibraries() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLibraries", reflect.TypeOf((*MockSoundLibrary)(nil).ListLibraries))
}
